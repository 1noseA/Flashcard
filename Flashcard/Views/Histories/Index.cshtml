@model Flashcard.ViewModels.HistoriesViewModel

@{
    ViewData["Title"] = "Histories";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="content m-auto p-4" style="max-width:900px">
    <div class="p-5 border box-shadow">
        @{
            if (@Model.StudyDate != null)
            {
                <h5 class="mb-5 text-center">学習履歴</h5>

                <!-- グラフ -->
                <div>
                    <canvas id="myChart"></canvas>
                </div>
            }
            else
            {
                <div>学習履歴はありません</div>
            }
        }
    </div>
    <div class="row d-flex mt-4">
        <div class="col-2">
            <button type="button" class="btnLight box-shadow w-100" onclick="location.href='./'">戻る</button>
        </div>
    @{
        if (@Model.StudyDate != null)
        {
            <div class="col-10 d-flex justify-content-end">
                <form asp-action="AllDelete">
                    <button type="submit" class="btnLight box-shadow me-2" onclick="return confirm('履歴を全て削除してよろしいですか');">履歴の削除</button>
                </form>
                <form asp-action="DownloadFile">
                    <button type="submit" class="btnLight box-shadow">Excel出力</button>
                </form>
            </div>
        }
    }
    </div>
</div>

<script>
    const ctx = document.getElementById('myChart');

    new Chart(ctx, {
        type: 'bar', // 棒グラフ
        data: {
            labels: [@Html.Raw(@Model.StudyDate)], // x軸に表示する学習日時
            datasets: [{
                label: '正答数(回)',
                data: [@Html.Raw(@Model.CorrectAnswerCount)], // 学習日時ごとの正答数
                borderWidth: 1,
                yAxisID: 'first-y-axis'
            }, {
                label: '正答率(%)',
                type: "line", // 折れ線グラフ
                data: [@Html.Raw(@Model.CorrectAnswerRate)], // 学習日時ごとの正答率
                yAxisID: 'second-y-axis'
            }]
        },
        options: {
            animation: false, // チャートがすぐに表示されるようにアニメーションをオフにする
            plugins: {
                //legend: { // 凡例（今回は表示にしている）
                //    display: false
                //},
                tooltip: { // ツールチップ非表示
                    enabled: false
                }
            }, // このかっこが足りなかったのが問題だった
            scales: {
                'first-y-axis': { // y軸1つ目
                    type: 'linear', // 線形軸
                    position: 'left', // 軸の位置
                    min: 0, // 最小値
                    //max: 10, // 最大値
                    ticks: { // 目盛線
                        stepSize: 5 // 目盛間隔
                    },
                    title: {
                        display: true,
                        text: "正答数(回)"
                    }
                },
                'second-y-axis': { // y軸2つ目
                    type: 'linear',
                    position: 'right',
                    min: 0,
                    max: 100,
                    ticks: {
                        stepSize: 10
                    },
                    title: {
                        display: true,
                        text: "正答率(%)"
                    },
                    grid: { // グリッド線を片方消す
                        drawOnChartArea: false
                    }
                }
            }
        }
    });
</script>
